[buildout]
develop = .
parts =
  zodb
  memcached
  memcached-ctl
  poundbuild
  poundconfig
  app
  test
  server
  instance1
  instance2
  instance3
  instance-debug

newest = false

# These settings pin egg versions to the Zope 3.4.0 Known Good Set
# if you want to upgrade the KGS version, you need to change the URL
# below. If you will comment/remove these settings, you'll get the
# latest versions of Zope eggs that are not guaranteed to work well
# together.
extends = http://download.zope.org/zope3.4/3.4.0/versions.cfg
versions = versions

extensions =
  mr.developer

sources = sources
sources-dir = extras
auto-checkout =
  allen.content.core
  allen.content.section
  allen.content.games
  allen.content.jokes
  allen.image.scale
  allen.utils.cache
  allen.catalog.timeline

always-checkout = force

[sources]
allen.content.core     = git git://github.com/avoinea/allen.content.core.git
allen.content.section  = git git://github.com/avoinea/allen.content.section.git
allen.content.games    = git git://github.com/avoinea/allen.content.games.git
allen.content.jokes    = git git://github.com/avoinea/allen.content.jokes.git
allen.image.scale      = git git://github.com/avoinea/allen.image.scale.git
allen.utils.cache      = git git://github.com/avoinea/allen.utils.cache.git
allen.catalog.timeline = git git://github.com/avoinea/allen.catalog.timeline.git

[versions]
zope.index = 3.5.0
zope.intid = 3.7.0
zope.container = 3.8.1

[libevent]
recipe = zc.recipe.cmmi
url = http://www.monkey.org/~provos/libevent-1.4.8-stable.tar.gz

[memcached]
recipe = zc.recipe.cmmi
url = http://www.danga.com/memcached/dist/memcached-1.2.6.tar.gz
extra_options = --with-libevent=${libevent:location}

[memcached-ctl]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/memcached
mode = 0755
content =
 #!/bin/sh
 export LD_LIBRARY_PATH=${libevent:location}/lib

 PIDFILE=${memcached:location}/memcached.pid
    case "$1" in
      start)
       ${memcached:location}/bin/memcached -d -P $PIDFILE -p 16559
        ;;
      stop)
        kill `cat $PIDFILE`
        ;;
      restart|force-reload)
        $0 stop
        sleep 1
        $0 start
        ;;
      *)
        echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
        exit 1
        ;;
    esac

[poundbuild]
recipe = plone.recipe.pound:build
url = http://www.apsis.ch/pound/Pound-2.3.2.tgz

[poundconfig]
recipe = plone.recipe.pound:config
socket = ${buildout:directory}/var/poundctl.socket
balancers =
  one 127.0.0.1:16550 127.0.0.1:16551 127.0.0.1:16552
timeout = 30

[zodb]
recipe = zc.recipe.egg:script
eggs = ZODB3

[app]
recipe = zc.zope3recipes:app
eggs = stiam.ro

site.zcml =
  <include package="stiamro" />
servers = zserver

[instance-debug]
recipe = zc.zope3recipes:instance
application = app
address = 16550
zope.conf =
  <zodb>
    <zeoclient>
      server ${buildout:directory}/var/zeoserver.sock
      blob-dir ${buildout:directory}/var/blobscache
      cache-size 100MB
    </zeoclient>
  </zodb>

[instance1]
recipe = zc.zope3recipes:instance
application = app
address = 16551
zope.conf =
  <zodb>
    <zeoclient>
      server ${buildout:directory}/var/zeoserver.sock
      blob-dir ${buildout:directory}/var/blobscache
      cache-size 100MB
    </zeoclient>
  </zodb>

[instance2]
recipe = zc.zope3recipes:instance
application = app
address = 16552
zope.conf =
  <zodb>
    <zeoclient>
      server ${buildout:directory}/var/zeoserver.sock
      blob-dir ${buildout:directory}/var/blobscache
      cache-size 100MB
    </zeoclient>
  </zodb>

[instance3]
recipe = zc.zope3recipes:instance
application = app
address = 16553
zope.conf =
  <product-config lovely.remotetask>
    autostart stiam.ro@cronjob4news
  </product-config>
  <zodb>
    <zeoclient>
      server ${buildout:directory}/var/zeoserver.sock
      blob-dir ${buildout:directory}/var/blobscache
      cache-size 100MB
    </zeoclient>
  </zodb>

[zope3]
location =

[test]
recipe = zc.recipe.testrunner
eggs = stiam.ro
defaults = ['--tests-pattern', '^f?tests$', '-v']

[server]
recipe = zc.zodbrecipes:server
zeo.conf =
   <zeo>
     address ${buildout:directory}/var/zeoserver.sock
   </zeo>
   <blobstorage 1>
    blob-dir ${buildout:directory}/var/blobs
    <filestorage 1>
      path ${buildout:directory}/var/Data.fs
    </filestorage>
   </blobstorage>
